(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{409:function(t,s,a){"use strict";a.r(s);var e=a(56),r=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"dfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dfs"}},[t._v("#")]),t._v(" DFS")]),t._v(" "),a("p",[t._v("깊이 우선 탐색, Depth-First Search.")]),t._v(" "),a("p",[t._v("말 그대로 최대한 깊이 내려가면서 탐색을 진행하고, 더 이상 깊이 갈 수 없을 경우 옆으로 이동한다.")]),t._v(" "),a("ol",[a("li",[t._v("모든 노드를 방문하고자 할 때")]),t._v(" "),a("li",[t._v("BFS보다 좀 더 간단함")]),t._v(" "),a("li",[t._v("탐색 속도는 BFS에 비해 느림")])]),t._v(" "),a("h2",{attrs:{id:"bfs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bfs"}},[t._v("#")]),t._v(" BFS")]),t._v(" "),a("p",[t._v("너비 우선 탐색, Breadth-First Search")]),t._v(" "),a("p",[t._v("최대한 넓게 탐색을 진행한 다음, 더 이상 넓게 갈 수 없을 경우 아래로 이동한다.")]),t._v(" "),a("ol",[a("li",[t._v("두 노드 사이의 shortest path를 찾을 때\nㄴ DFS의 경우 모든 노드를 다 살펴봐야 할 수도 있음")])]),t._v(" "),a("h3",{attrs:{id:"ref"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ref"}},[t._v("#")]),t._v(" Ref")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("https://devuna.tistory.com/32\n")])])])])}),[],!1,null,null,null);s.default=r.exports}}]);